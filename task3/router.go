// Code generated by hertz generator.

package main

import (
	handler "github.com/ShaddockNH3/west2-online-golang-2025-test/task3/biz/handler"
	"github.com/ShaddockNH3/west2-online-golang-2025-test/task3/biz/handler/task3"
	"github.com/ShaddockNH3/west2-online-golang-2025-test/task3/biz/mw"
	"github.com/cloudwego/hertz/pkg/app/server"
)

// customizeRegister registers customize routers.
func customizedRegister(r *server.Hertz) {
	r.GET("/ping", handler.Ping)

	v1 := r.Group("/v1")
	{
		publicGroup := v1.Group("/")
		{
			publicGroup.POST("/users", task3.CreateUser)                   // 对应 CreateUser
			publicGroup.POST("/user/login", mw.JwtMiddleware.LoginHandler) // 对应 Login
			publicGroup.GET("/users", task3.QueryUser)                     // 对应 QueryUser
		}

		privateGroup := v1.Group("/")
		privateGroup.Use(mw.JwtMiddleware.MiddlewareFunc())
		{
			userRoutes := privateGroup.Group("/users")
			{
				userRoutes.PUT("/:user_id", task3.UpdateUser)
				userRoutes.DELETE("/:user_id", task3.DeleteUser)
			}

			todoRoutes := privateGroup.Group("/todo_lists")
			{
				todoRoutes.POST("/", task3.CreateToDoList) // POST /v1/todo_lists
				todoRoutes.PATCH("/:todo_list_id", task3.UpdateToDoList)
				todoRoutes.PUT("/status", task3.UpdateBatchStatus)
				todoRoutes.GET("/", task3.QueryBatchToDoList)
				todoRoutes.DELETE("/:todo_list_id", task3.DeleteToDoList)
				todoRoutes.DELETE("/pending", task3.DeletePendingToDos)
				todoRoutes.DELETE("/completed", task3.DeleteCompletedToDos)
				todoRoutes.DELETE("/", task3.DeleteAllToDos)
			}
		}
	}
}
