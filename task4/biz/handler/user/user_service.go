// Code generated by hertz generator.

package user

import (
	"context"

	user "github.com/ShaddockNH3/west2-online-golang-2025-test/task4/biz/model/user"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// RegisterUser .
// @router /v1/user/register [POST]
func RegisterUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.RegisterUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.RegisterUserResponse)

	c.JSON(consts.StatusOK, resp)
}

// LoginUser .
// @router /v1/user/login [POST]
func LoginUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.LoginUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.LoginUserResponse)

	c.JSON(consts.StatusOK, resp)
}

// InfoUser .
// @router /v1/user/info [GET]
func InfoUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.InfoUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.InfoUserResponse)

	c.JSON(consts.StatusOK, resp)
}

// AvatarUploadUser .
// @router /v1/user/avatar/upload [PUT]
func AvatarUploadUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.AvatarUploadUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.AvatarUploadUserResponse)

	c.JSON(consts.StatusOK, resp)
}
